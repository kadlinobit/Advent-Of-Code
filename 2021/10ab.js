const input = ["{<<[{(<<<([[<<{}()><<>{}>]{[(){}]{{}()}}]]<[{(()())<[]{}>}(({}[])(()[]))]>)>>{{[<[[(<><>)<{}()>]{(","(({[(<{[[{{[{[<>[]][{}{}]}([{}()][<>()])][[{()()}(()<>)][([]){<>[]}]]}}{<{{{<>{}}(()<>)}[(","<{({[(<{[[((({()()}<<>()>)){<{[]()}<[]()>><[()[]]>})<{[<[]{}>]<{{}[]}{()[]}>}<[[[]<>]]<(<>())(<>{})","<{<[{[(<<(<(<[(){}]{()()}>)[{({}())[<>{}]}]>((<(()<>){<>()}>{{{}<>}([][])})))([({[{}()]<[]()","<[<{(<{{{{[{[{[]{}}<()[]>](<[]{}><[][]>)}<<<<>{}>{<>()}>{([]<>)(()[])}>]}}(<[{[<[]()>[[]<>]]}]>([{","{[<({<{{([{{{(()<>)(<>{})}}}{(([()()]{()())){[{}{}]([])})<<<()()><<>()>>((()()){[][]})>}](({{<<","<{<[[(<(((<{[[()<>]{{}()}][(<>)[<>])}>)))>({{{{((<(){}>(()<>))){(<()<>>(()()))[<()<>><[]<>>]}","<{<({(<(<{{<[((){})[()<>]]{{<>{}}([][])}>}[<{[[]()]}{<[]{}>(()<>)}>(<[()]<{}()>><{()<>}{[]()}>)]}","{<<({{{(<{{<<[{}{})[(){}]>{<<><>><[]{}>}>({({}())[<>[]]}{{{}{}}<<><>>})}}({[[(()){(){}}]({[]()}<<>{}","{{{<(([{<([[[[<><>][[]<>]](({}[])<{}{}>)][[<[][]>{{}<>}]<([]{})([]{})>]]{<[(())({}{})]<((){}){<>[]}","[(<(<<[{{{<<[({}[])<<>>][{{}<>}<[]{}>]>([({}<>){{}[]}]{(<>{})})>}(<<<{()<>}{(){}}>(([]<>){{}[]})>","{{<([({([<([[(()[])<[]()>][{{}{}}<<>()>]](({<>}{<>[]})<{[][]}{()[]}>))[[<({}[])<<>[]>>[<<>{}>({}<>)}][(<<><>>","<<<<{{(<{<(<[<<><>>(<>[])]{{<>}((){})>>(({<>()}(<>{})){{{}{}}[(){}]}))<<[[()()][[]<>]]([<><>])><[<[]<>>[[","<<[<(([(<([<({<><>}{[]<>}){(<>{})<<><>>}>({<<>[]>{()[]}}{(<>())[()[]]})])(<(<{[]<>}{[]{}}>{[()","(<[<(({{{<(<<{[][]}([][])>[<{}{}>{{}<>}]><<<{}[]>[(){}]>>){{([()<>][{}<>])[<<>()>[<>[]]]>[{<[]{}>[[]{}]}[(","<([<(<<{[{{{{{{}[]}{()<>}}([{}()]<{}()>)}{{({}())(<>())}[[<>()]<()()>]}}<{<[<>]>[[[]{}]({}{})]","{[[[[{(<({[[<{{}()}(<>{})>{<<>{}>}]][<[<[][]><[]{}>](([][]))>({<[]()>[{}[]]}[[<>{}]<[]()>])]}(<<(<<>()>)[{<><","({(([<<({<<<{([][]){<>()}}<[{}<>]{<>{}}>](<[()<>][[][]]>({()[]}[[][]]))>{[<[[]{}](()())>((<><>)<{}{}>)][","{[(([{[(<[[(<{{}[]}{()()}]<({}<>)[<><>]>)[[[<>{}](<>())][[{}{}]<{}{}>]]]{<<({}[])[<>[]]>{{","{{([<[{[<(([{({}{})({}[])}[{<>[]}[()()]]][([<>{}](<>))]))>{{([<<()()>(<><>)>((()[]))]]<<(<[]{}>[<>[]]","{{{<[[<{[(<{{({}{})<<><>>}(<[]{}>[(){}])}({{[]()}(()<>)]<{[]<>}[<>[]]>)>[{((<>()){()()})((<><>)<<>>)}","({{<<([<<[<([({}())([]<>)]{<(){}>})([[()()]])>]>><<[<(({<>{}})[(()<>){{}()}])([{()[]}[<><>]](<<>[]>[[]{}]","([<<(<<({<<{(<()()>)[<<>()>[(){}]]}({(()<>)([][])})>>}({<[{{(){}}<{}{}>}<([]{}){[][]}>]>}))[[([[[([][]){(","([[<([(<{{(({(<><>)<()>}[{()<>}({}<>)]))<([[()](()[])][{()<>}[<><>]])<<[[]{}]<()[]>><{<>[]}[{}[]]>>>][{{<<()[","{[([<{((<[{{<{<>{}}><([][])<<>[]>>}<<[{}[]]>([(){}])>>{<([()[]]{{}()})(({}[]))><<{()()}<()[]>>","<({<(<[{<[[{[{()<>}[()[]]]{[[][]]({}<>)}}<<([]())>>]{(<{<><>}<[]()>><{<>{}}>)[(<{}[]><<>()","[{({[<{<(<<([{[]<>}([]())]{{(){}}})>{(<{<>{}}(<>{})>{{[]<>}([]())})({<<><>>}({()[]}<{}<>>))}>([","<<<<<<<{<{{[[<[][]>{<>{}}]<<{}()>[[]{}]>]((([]{}))({<><>}({}<>)))}[<[<[][]>][[<>][{}[]]}>[{(()<>)}[<(){}","([[{<{(<[{[([[{}{}][()()]](<{}[]>[<>[]])}]}(<<<((){})[<>()]><{{}[]}([][])>>>(<[<{}<>>{{}()}][{()()}(<><>)]>","{[{[{([[[[<[([(){}]<{}<>>)[({}())(()[])]]>]<([<{{}<>}>[<<>>{()[]}]]{<<<>{})<<>{}>><<<>{}>(<><>)","{<([<((((<[[{<<>{}>[<>()]}]<<(()<>)<()()>>[([]{})<(){}>]>][({<{}[]>}<[()<>](<>())))<<[[]()]<","([[(<<{[{<[<<<<>[]><<>[]>>({[]<>}<<>{}>)>([<<><>>(()())]({{}()}))][[<([]<>)({})>{{[]()}[[][]]}]<([","<[<[[([[([<[([(){}]<<>{}>)<(()())[{}{}]>]{({()()}{[][]})((()[])({}{}))}>[[{[{}{}](<><>)}{{[]{}}{","[(<({<{(([{[<((){})>{{[][]}{()[]}}]}]{((<([]())<<>{}>>{{<>()}{[]}])){(<<{}<>><<>[]>>){({{}[]}<<>[]>)<[(){}]","{((((<[[{<{({([]())[{}]}[<{}[]>{()}])}>}]{<[<<(<{}{}>(()[]))>[{{<><>}{[]{}}}<[[][]][()<>]>]>](<<{[[](","<((({(<[[({({({}{}}{{}[]}})([{[]}({}[])]{[{}()]({}())})}{([{{}{}}(<>[])]<({}[])[<>()]>)[[<","(([([[([<((<(<()()>({}()))[[<>]<<>[]>])[<([]<>)>(<()()>(<>{}))])<{[{[][]}(()<>)]}[[({}[])<()","{{(((([<<(<{<[[]<>][<><>]><[{}()]<<>()>>}<{{{}()}([]{})}(<()<>><{}<>>)>>){<({[()[]](<>{})}[[<>()](()[])])<","<(<<([<[[([(([[]()]<(){}>)[{{}()}[{}[]]])][<<<<>()>(<>)>{{()[]}[{}<>]}>])([[([<>[]]<<>()>){{<>()}<()<>>}][","<<<([([{((([<{[]{}}<(){}>>[(()<>)[[]{}]]]<{<[]{}><[]{}>)>)<<[[{}{}]{{}()}][{()[]}[()()]]>([{[","{(<<{<[<{<{{(<<>()>{{}[]})[{[]<>}{()[]}]}}(({({}<>)<()>}<[{}{}]{{}<>]>)({<{}{}>((){})}{{[][]}[[][]]","{([[<[<[[(<([<()>{[]{}}]<[<>{}](()[])>){({{}}([][]))}>)[({(((){})<{}{}>)})[({({}[])[[]()]}<<{}<>>(<><>)>)","[[<[[([([[{((<{}{}><<>()>)<<<>{}>((){}>>)<<<(){}><[]{}>>([[]{}])>}({[[<>{}]({}())]<<<><>>>})]]((<{{(","[<{{[([{[[<((([]){(){}})<{<>[]}{[]{}}>){[[[]{}]{[]{}}]}>]{[([<()[]>[<>{}]](([][]){<>{}}))]}]}{","({([{((<[([[<[{}()][()[]}>]{<{<>[]}<{}{}>>[<<>>{()<>}]}]<({{{}<>}{{}<>}}{<<>{}><()<>>})<(([]()","({<(({{{{{<{{{[]()}<[]>}[{<>{}}[[][]]]}[{({}())({}())}{({}{})<[]{}>}]>}{[<(([]())({}<>))>[({{","<<<{[[[<<{[<<((){})(()())>[[[]<>]<<><>>]>{{[{}{}]{(){}}}<{<><>](()())>}][(<{(){}}>)]}>(<[<[","{[<[{<({([({(<<><>>){([][]){(){}}}}[{{()()}[<><>]}]]{<{<<>>(<><>)}{{<>[]}(<>)}>[{{[]<>}[<>[]]}((<>[]){[]})]}]","<{[{{[<{[<<<[({}<>)[{}]][{{}{}}]>(({()[]}<{}<>})<[{}]([][])>)>>[[<<[()<>]({}[])>(<[][]>[{}()])>({{","(({[<([({{<{{(()<>)[{}[]]}<{(){}}<<>()>>}(<[()()](<><>)>{[()()]([]<>)})>({(([]()){{}})<[[]()](<>{","{{<<[<((<<({[(()<>)([]<>))({[]{}})}[([()[]]{[]{}})])<((<[]{}>(()())))>>{<<<<{}>(<><>)>>(<{<><>}>)>}>","{{([{{[{([({[<{}<>>({}[])][({})<()<>>]}[<(<>())(<>{})>({(){}}<[]()>)])<{<<{}{}>>[<()()>(<>{})]}({[()<>","(<(({{<<(<[{{{(){}}(<>[])}<(<>())>}{<{<><>}({}{})>{<[]{}><()[]>}}][<((()[])<{}<>>)((<><>){()()})>]","<((({{{([([(<{()[]}[{}()]>)][[[[{}[]][<>{}]][{{}}[()()]]]([[{}<>]]{(<>())(()[])})])[{{(<{}()]<<>()>)[{<><>}[","(([({[([({([[[[]{}]({})]{{[]{}}{{}()}}][[[<>{}]]<<()[]>[<>{}]>]){<<[[]()]<{}[]>>({(){}}<<>{}>)>","(<{<[({(<({{{[[]<>][<>()]}}[{[[]()]{[]{}}}]}<(([[]()])<<<>[]>{[][]}>)[<([][]){<>{}}>([{}{}]{{}<>","<{((([[{{{{[[{[]()}[<><>]]<[<><>][{}{}]>](<{{}}({}{})>{<{}>[()<>]})}{([<[][]>]({<>{}}<[][]>))<{[<>{}]}>}","{<{<([<<[<<{<<<>{}>[()()]>{<[]()><()[]>}}[{([]<>>{[][]}}[({}[])([][])]]>{<[[<>[]]<{}[]>]<[{}[]][[][]]>>}>{{<","([<[[[<[[<[{<<<>{}>[<>]>(([][]))}([<{}[]>{<>{}}][<{}[]>])]<{{(()[])[[]()]}}[{{{}[]}[{}<>]}(({}(","[{<[{[<{<{(({{{}()}<[]{}>}{[[]()]})<{[<>[]][<><>]}<(()<>){[][]}>>)<(({{}()}<{}>){(()){[][]}})<{[()<>","(<{([[{{(((([(()<>)](({}[])[()[]]))])([(([<>]<<>{}>)<{(){}}{<><>}>)[[{[]{}}<<><>>][({})[<>[]]]]]{{<({}{})<()","{<{(<<<<{{{{[<()()>{(){}}](({})<()()>)}{<[[]{}]<<><>>>}}[<{[<>]{()<>}}[[[]()]]>]}({([[<>[]]{{}()}]){<<{}<>","([[{<[[{[<{[<({})<<>[]>>{{[]<>}[[]{}]}]{([<>[]][[]{}])(<{}><()>)}}{<{{{}[]}<{}{}>}{<<><>>[[]()","((<[<(({<{{{{<()<>>}((()())(<>{}))}}{[{({}[]){<>()}}[<()<>>]}}}[<[({()<>}{<>{}}){{<>()}[<><>]}]<(<(){}>(","[({[(([({[({(<<>[]>)([{}<>]{()()})}<<(<>{})(()[])><[<>{}](()<>)>>)]<[[{(<>()){<>()}}{(<>()}{{}[]}}]]>}{[(([","[{{<<(({<<<[[({}()){[]}][{(){}}]]>[[<{()<>}([]())>]]}((<<(<>())<()[]>>[(<>()){[][]}]>{[({})<()()>]}))","[{((([{<<<[<<[{}]<[]()>><([][])[<>{}]>>{[<{}<>>{[]<>}]([<>[]])}](<(<{}[]>{{}()})>([(<>{})<[]<>>]{{<>[]}{<>","(<[([<[[{{[(<(()())(<>{})><<{}[]>{<>[]}>)<<([]{}){[]}>{(()[])[<>]}>]({<{<>()}>[<<><>>[()[]]]}[(","[<(<[([<[([<[[[]][()()]]{[[][]]{[][]}}>(<([]{})>)][<({[][]})<({}[])([]())>><{{[]()}}{<{}[]>)>])[{[<<()(","{{<{[(({[[(((<<>()><<>})<(()()){[]()}>)(<{[][]}<[][]>>{[[][]]{[]}}))<[<{<>{}}>]>]{{[[{<>{}}[","<{<[{{[<<[[{<{{}()}><[()()]([]{})>}][<[(()<>){<><>}]{[{}()]}>{[{()[]}[<>{}]]{(()[])[<>[]]}}]]<([{{<>()}{","{<<[<[(<{([<{[<>{}][{}{}]}({[]()}(()))>(<([]{})><<<>{}><{}<>>>)][{{{[]{}}}[([]<>){[]{}}]}<(<<>","{[(<{({(<<({(({}()){[]{}})<(()[])>}[((<>{})([]()))<{{}[]}[<>[]]>])<[<[{}()]{[][]}><<[]{}>>]>>{","({(((<<{([{[[<<>{}>[[]()]][{<>[]}<()[]>]]}{({<[][]}{<>()}})({<{}<>>{{}<>}}<{[]{}}({}())>)}]","[[{[{<<<[[([<<<><>>[()[]]><{<>[]}>])]{([[<<><>>[<><>]][{<>()}{{}{}}]]([{<>()}<{}[]>]{{[][]}([]<>)})){{(","{<([[[[[[{([[<[][]><{}()>]<([][])<(){}>>]({[[][]]{()[]}})){({<{}{}><<><>>}){([{}{}]{<><>}){(","({<[(((((<(<[[[]<>](<><>)]<{<>[]}[(){}]>>>(({[<>[]]<<>()>}{[()()]<{}<>>})[{<{}[]>[{}[]]}[[[](","({{[(({({[({{<<>{}>((){})}(({}{}))})]<[<[({}{})((){})]<<<>{}>>><{[{}[]](<>{})}<<[]<>>([][]","({([[<{(([<(((())[<>()])[[[]]<{}()>])<[<()<>>{(){}}][{()<>}[[]<>]]>><[<[<>{}]{<>()}>](<(<>())","{((<<[({(((<{{{}{}}<<>{}>}<({}())<<>[]>>><([<>])<[[]()]>>)[[<<<>[]>(()<>)][([]())]]{{<[]<>>([]{})}<{{}()}(","((([{{[(<{{((<{}{}><<><>])[({}<>)[[]<>]]){<{()[]}[[]()]>(([])[{}[]])}}(<[[[]{}][{}[]]][[()[","[{{<{<(<[<{({<[]<>>}<<[][]>[()[]]>){<(<>()]{<>[]}>[<{}[]>{()()}]}}>{[[{[()()]<<>[]>}<[[]<>](<>","<((<[<<[(<{[[(<>{})(<>{})]<{{}()}>](([{}{}][(){}]}[[<><>]{{}<>}])}<{[[{}{}][{}()]][(()())<[][]>]}>><<","[(({[[{[{<{[(<<>[]><{}{}>)(([]{}){(){}})]{[[[][]]<<>()>]({<>()}(<>{}))}}[<{{<>()}([]{})}[{[]()}[()[]]]>[[","[({[([{[({<<([<>[]])(<{}<>><{}{}>)>>{<[{[][]}<{}[]>){[<><>]<()()>}>[(<<>{}>{[][]})[{()<>}(<","[<<<{[[({<{[{<()()><{}[]>}]<{(()())<{}{}>}{{<>{}}<<>()>}>}<{[{{}[]}(<>)]((<>())[()<>])}{<[<","[[(<(({([<<<[<{}<>>(<>{})][{<>[]}([][])]><<<[]<>>(())>[[(){}][()<>]]>><{(<{}<>>[{}{}])<{()","[<<{[([<([([(({}{})[<>[]])<{[]<>}(()())>]<<<{}[]>{<>{}}>{({}[]){{}<>}}>)(([[[][]]](<{}{}><[]{}>)){[<{}[]>{{}<","[<{[({[{{<[([<<><>>[[][]]]([{}{}]({}{})))([[{}<>]<[]{}>][[<>()]{[][]}])]<<(<<>{}><<>{}>){[<>{}](<>[","({[<[[{[(<<[<{[][]}([]<>)>[<<>[]>[()[]]]]<(<{}[]><<>{}>)[<[][]>]>>[[{{<><>}{<>}}<[{}()]{<><>}}]{(<<>{}>","<<({[<[([{(([{(){}}][(()<>){{}<>>])<(<<>>)<[[]{}]{<>{}}>>)}<[<{<<>()>(<>())}>[{<[][]>(<>{})}[<{}[","{(<(({(((({({[<><>]<[]()>}{{<>[]}{<>()}}){({{}()}{()()})((<><>><()[]>)}})<[[{({}())({}{})}[{<><>","({(<({(<{((({([]{}){[]()}}({()<>}{(){}))){({<>[]}<[]{}>)<<[]()><[][]>>}))}>){(({[[[<<>[]>][<()[]>([][])]](","([<{<{(([(<<([{}]([]{}))<(()())({})>>([<{}()>(<>())])>{[[[()()]]<[<>{}]<{}{}>>][<{(){}]{<>{}}><(<>[","[<[{(({<({([[{[][]}({}[])]([{}()]<{}[]>)])((<<[]{})({}())>{(<>{}){{}()}})[[<<>>(())]])}[{[[[()()](<>[","(<(((({(<{[{(<<>()>([]()))[<[]()>[<>]]}]<<[[()<>]([]{})]><(<[]{}>{<>[]}){{[]()}(()[])}>>}>)","<(<<(<<[(([{<<[]{}>(()())>{[(){}]([][])}}][(<{{}{}}{[][]}>(([][])<<>[]>))]))[[<<([{}[]]<[]{}>)>[([()[]]<{}","[<<<<(<(((<[(<()[]><[]{}>)](<{[]{}}[[]{}]>[<{}<>><<>{}>])>[[{{<>()}}([()<>][[]{}])]<(<[][]>((){}))<<[]","[<<[([{([[({{{()()}({}{})}({()[]}{<>{}})}{[{<>[]}[<>()]]((<><>)({}()))}){[{<{}{}>(<>[])}{{{}<>}}][<([]{})","[((({<<<<[<([{(){}}(()[])}{{[][]}({}{})})([{{}{}}{[]()}](([]<>){<><>}))><<<<{}[]>(<>[])>{(<>{})[<>","{<[({<[<[([{<{[][]}<{}{}>>([{}>)}([{[][]}({}[])][[{}()]])]{[[[{}<>]<<>{}>]{<<><>><[][]>}][(","{({<{[<{[<<[(<<>><<><>>)[<()[]>[{}[]]]]<[(<>[])<{}>]{({}[]){()[]}}>>{[<{[]()}({})>((())[()[]])](<({}<>)"]
const inputTest = ["[({(<(())[]>[[{[]{<()<>>","[(()[<>])]({[<{<<[]>>(","{([(<{}[<>[]}>{[]{[(<()>","(((({<>}<{<{<>}{[]{[]{}","[[<[([]))<([[{}[[()]]]","[{[{({}]{}}([{[{{{}}([]","{<[[]]>}<{[{[{[]{()[[[]","[<(<(<(<{}))><([]([]()","<{([([[(<>()){}]>(<<{{","<{([{{}}[<[[[<>{}]]]>[]]"]

const openArr = ['(','[','{','<']
const closeArr = [')', ']', '}', '>']
const errPointsArr = [3,57,1197,25137]
const errPointsIncArr = [1,2,3,4]
const errCountArr = [0,0,0,0]
let lineScoreArr = []

input.forEach(line => {
    let openStack = []
    
    // Browse each line by character, check if the line is corrupted or incomplete
    for (const char of line.split('')) {
        // If character is one of the opening, push it to the stack
        if (openArr.includes(char)) {
            openStack.push(char)
        } 
        // If character is closing and it closes the last opening character in stack, 
        // remove the last opening character from stack (a.k.a close the chunk)
        else if(char === closeArr[openArr.indexOf(openStack[openStack.length - 1])]) {
            openStack.pop()
        }
        // Otherwise, it must be a wrong closing character - line is corrupted
        else {
            errCountArr[closeArr.indexOf(char)]++
            openStack = []
            break
        }
    }

    // Incomplete lines - if openStack is not empty at this point, line is incomplete.
    if(openStack.length > 0) {
        let lineScore = 0
        
        // For each remaining opening char in the stack, use closing one and calculate it's score
        while(openStack.length > 0) {
            lineScore *= 5
            const openChar = openStack.pop()
            lineScore += errPointsIncArr[openArr.indexOf(openChar)]
        }

        lineScoreArr.push(lineScore)
    }
})


// Part 1 - error points for corrupted lines
const part1Result = errCountArr.reduce((acc, errCount, i) => {
    return acc + errCount * errPointsArr[i]
}, 0)
console.log('Part 1: ', part1Result)

// Part 2 - incomplete lines finishing score
lineScoreArr.sort((a,b) => a - b)
const part2Result = lineScoreArr[Math.floor(lineScoreArr.length / 2)]
console.log('Part 2: ', part2Result)
